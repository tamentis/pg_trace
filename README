pg_trace - trace postgres processes
===================================

          "You can guess most of what a database is doing from the
             activity of its file descriptors." - Justin Bieber

INTRO
    Wrapper around ``strace``-like tools and ``lsof`` that prints the tables
    being accessed by a particular PostgreSQL process (e.g. backend).

    Say you have a lengthy query that scans over TBs of data and you have one
    of the sales guys breathing down your neck to get its result. The query has
    already been running for an hour, you have no idea how long it will take,
    how far the backend has gotten. pg_trace will translate the file
    descriptors found in strace/ktrace/struss and resolve them into table, index,
    xlog names so you can guesstimate how far the process is, assuming there is
    a sequential factor in this query (partitioned tables? table scan? etc.)

    FIXME: note on the fact that it parses the table file and it's brutal.


DISCLAIMER
    You're going to run this thing as root, you kinda have to. Since it's
    written in C and since it parses data from a process that could be doing
    *ANYTHING*, it's very likely to be exploitable. If you're security
    conscious, please read the code, fix it and share.


USAGE
    It shall work like it's minions, lsof and strace:

        pg_trace -p 12345


INSTALL
    ./configure
    make
    sudo make install


AUTHORS/LICENSE
    pg_trace was written by Bertrand Janin <b@janin.com> and is distributed
    under an ISC license (BSD compatible, OSI compatible).

    A bunch of utility functions are borrowed from OpenBSD and OpenSSH, both
    under ISC and BSD licenses, with copyrights from the following authors:

	Copyright (c) 2004 Ted Unangst and Todd Miller
        Copyright (c) 1997,1998 Todd C. Miller <Todd.Miller@courtesan.com>
	Copyright (c) 2000 Markus Friedl.  All rights reserved.
        Copyright (c) 2005,2006 Damien Miller.  All rights reserved.

